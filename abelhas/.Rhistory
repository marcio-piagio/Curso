scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
fm2.nls$
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vemelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vemelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
dados <- read_excel("C:/Users/marci/Downloads/DADOS_COM_TCC (2).xlsx",
sheet = "DADOS_BUFFER")
library(readxl)
library(ggplot2)
dados <- read_excel("C:/Users/marci/Downloads/DADOS_COM_TCC (2).xlsx",
sheet = "DADOS_BUFFER")
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vemelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados2, aes(x=Clorofila, y=SPAD2)) +
geom_point(shape=19, size=3, color=ifelse(dados2$Cor=="Vermelho","red4","green4")) +
theme_black()
ggplot(dados2, aes(x=Clorofila, y=SPAD2)) +
labs(x = "Clorofila", y = "SPAD") +
geom_point(shape=19, size=3, color=ifelse(dados2$Cor=="Vermelho","red4","green4")) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vemelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vemelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
# geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vemelho", y = "SPAD") +
# geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados2, aes(x=Clorofila, y=SPAD2)) +
labs(x = "Clorofila", y = "SPAD") +
geom_point(shape=19, size=3, color=ifelse(dados2$Cor=="Vermelho","red4","green4")) +
theme_black()
ggplot(dados2, aes(x=Clorofila, y=SPAD2)) +
labs(x = "Clorofila", y = "SPAD") +
geom_point(shape=19, size=3, color=ifelse(dados2$Cor=="Vermelho","red4","green4")) +
theme_black()
ggplot(dados, aes(x=CI_vermeho, y=SPAD)) +
labs(x = "Clorofila", y = "SPAD") +
geom_point(shape=19, size=3, color="red3") +
theme_black()
ggplot(dados, aes(x=CI_vermeho, y=SPAD)) +
labs(x = "Clorofila vermelho", y = "SPAD") +
geom_point(shape=19, size=3, color="red3") +
theme_black()
ggplot(dados, aes(x=CI_verde, y=SPAD)) +
labs(x = "Clorofila vermelho", y = "SPAD") +
geom_point(shape=19, size=3, color="green3") +
theme_black()
dados <- dados[-31]
dados[-31]
dados[-31,]
dados[31,]
dados <- dados[-31,]
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(11.72*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
fit <- lm(SPAD ~CI_vermeho,data = dados )
summary(fit)
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(50.927 + 0.576*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(50.927 + 0.576*x), size=4, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
geom_function(aes(color = "Linear"),fun = function(x)(50.927 + 0.576*x), size=2, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
ylim(c(48,58))+
geom_function(aes(color = "Linear"),fun = function(x)(50.927 + 0.576*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
ylim(c(47,59))+
geom_function(aes(color = "Linear"),fun = function(x)(50.927 + 0.576*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_vermeho)) +
geom_point(shape=19, size=3,color = "red3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
ylim(c(45,60))+
geom_function(aes(color = "Linear"),fun = function(x)(50.927 + 0.576*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(23.049*x  -2.467*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="green4","Quadratico"="blue4" )) +
theme_black()
fm <- nls(SPAD ~ b*CI_verde + c*CI_verde^2 ,data = dados,
start = c( b = 1,c=1))
fm2 <- lm(SPAD ~CI_verde,data = dados )
summary(fm)
summary(fm2)
ggplot(dados, aes(y=SPAD, x=CI_verde)) +
geom_point(shape=19, size=3,color = "green3") +
labs(x = "Clorofila vermelho", y = "SPAD") +
ylim(c(45,60))+
geom_function(aes(color = "Linear"),fun = function(x)(47.156 + 0.956*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(15.043*x  -1.048*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="red4","Quadratico"="blue4" )) +
theme_black()
ggplot(dados, aes(y=SPAD, x=CI_verde)) +
geom_point(shape=19, size=3,color = "green3") +
labs(x = "Clorofila verde", y = "SPAD") +
ylim(c(45,60))+
geom_function(aes(color = "Linear"),fun = function(x)(47.156 + 0.956*x), size=1, alpha=0.4) +
geom_function(aes(color = "Quadratico"),fun = function(x)(15.043*x  -1.048*x^2), size=1, alpha=0.4) +
scale_colour_manual("Modelo",values=c("Linear"="red4","Quadratico"="blue4" )) +
theme_black()
install.packages(c("cli", "htmltools", "rlang", "xfun"))
blogdown::new_site()
blogdown::new_site()
remove.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
## Global options
knitr::opts_chunk$set(cache = TRUE)
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data//Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data\Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data//Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data\Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data\Dados abelhas.xlsx")
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
setwd("C:/Users/marci/OneDrive/Documentos/GitHub/Portfolio/abelhas")
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
Dados_abelhas$Meses <- dplyr::case_when(
Dados_abelhas$Meses == 1 ~ "Jan",
Dados_abelhas$Meses == 2 ~ "Fer",
Dados_abelhas$Meses == 3 ~ "Mar",
Dados_abelhas$Meses == 4 ~ "Abr",
Dados_abelhas$Meses == 5 ~ "Mai",
Dados_abelhas$Meses == 6 ~ "Jun",
Dados_abelhas$Meses == 7 ~ "Jul",
Dados_abelhas$Meses == 8 ~ "Ago",
Dados_abelhas$Meses == 9 ~ "Set",
Dados_abelhas$Meses == 10 ~ "Out",
Dados_abelhas$Meses == 11 ~ "Nov",
TRUE ~ "Dez"
)
Dados_abelhas$Meses <- factor(Dados_abelhas$Meses,
levels = c("Jan", "Fer", "Mar", "Abr", "Mai", "Jun",
"Jul", "Ago", "Set", "Out", "Nov", "Dez" ))
mediana <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, median)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(mediana)[order(mediana)])
bar <- Dados_abelhas %>% group_by(Colônias) %>% summarise('N° potes Mel'= sum(`N° potes Mel`))
bar2 <- Dados_abelhas %>% group_by(Meses) %>% summarise('N° potes Mel'= sum(`N° potes Mel`))
bar3 <- Dados_abelhas %>% group_by(Colônias,Meses) %>% summarise("N° potes Mel"=sum(`N° potes Mel`))
bar4 <- Dados_abelhas %>% group_by(Colônias,Meses) %>% summarise("Est. Pop." = sum(`Est. Pop.`))
numerica <- Dados_abelhas[3:9]
sd <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, sd)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(sd)[order(sd)])
mediana <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, median)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(mediana)[order(mediana)])
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.1 <- glm(`N° potes Mel` ~ .,data = dadosModelo, family = poisson(link="log"))
modelo.2 <- MASS::glm.nb(`N° potes Mel` ~ `N° discos` + Colônias, data = dadosModelo)
summary(modelo.2)
sd <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, sd)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(sd)[order(sd)])
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.3 <- pscl::zeroinfl(`N° potes Mel` ~ .|1,
dist = "poisson", data = dadosModelo)
modelo.3.1 <- pscl::zeroinfl(`N° potes Mel` ~ .|`Comp. Canudo (cm)` + `Diâm. Canudo (cm)`+
`Tam. Discos (cm)`+ `Peso (Kg)`,
dist = "poisson", data = dadosModelo)
modelo.4 <- pscl::zeroinfl(`N° potes Mel` ~ .| 1,
dist = "negbin", data = dadosModelo)
modelo.4.2 <- pscl::zeroinfl(`N° potes Mel` ~ `Comp. Canudo (cm)`+`N° discos` + Colônias|
`Comp. Canudo (cm)`+ `N° discos` + `Tam. Discos (cm)` + `Peso (Kg)`,
dist = "negbin", data = dadosModelo)
modelo.4.3 <- pscl::zeroinfl(`N° potes Mel` ~ .| `Comp. Canudo (cm)` + `Diâm. Canudo (cm)`+
`Tam. Discos (cm)`+ `Peso (Kg)`,
dist = "geometric", data = dadosModelo,)
# ## load pscl
library(pscl)
## fit hurdle model
modelo.5 <- hurdle(`N° potes Mel` ~ . | 1,data = dadosModelo,
dist = "poisson")
modelo.6 <- hurdle(`N° potes Mel` ~ . | 1,data = dadosModelo,
dist = "negbin")
modelo.6.1 <- hurdle(`N° potes Mel` ~ `Comp. Canudo (cm)`+`N° discos` + Colônias|
`Comp. Canudo (cm)`+ `N° discos` + `Tam. Discos (cm)` + `Peso (Kg)`,
dist = "negbin")
tab1 <- data.frame("AIC" =c(AIC(modelo.1),AIC(modelo.2),AIC(modelo.3),AIC(modelo.4),AIC(modelo.5),AIC(modelo.6) ),
"logLik" = c(logLik(modelo.1)[1],logLik(modelo.2)[1],logLik(modelo.3)[1],logLik(modelo.4)[1],logLik(modelo.5)[1],logLik(modelo.6)[1]),
"df" = c(21,22,22,23,22,23),
"Dispersion"=c(disGlm(modelo.1,dadosModelo),disGlm(modelo.2,dadosModelo),disGlm(modelo.3,dadosModelo),disGlm(modelo.4,dadosModelo),
disGlm(modelo.5,dadosModelo),disGlm(modelo.6,dadosModelo)),
"dif"= abs(1-c(disGlm(modelo.1,dadosModelo),disGlm(modelo.2,dadosModelo),disGlm(modelo.3,dadosModelo),disGlm(modelo.4,dadosModelo),
disGlm(modelo.5,dadosModelo),disGlm(modelo.6,dadosModelo)))
)
row.names(tab1) <- paste0("modelo.",1:6)
res1 <- res(modelo.2)
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
```{r,echo=FALSE,message=FALSE}
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
Dados_abelhas <- readxl::read_excel("data/Dados abelhas.xlsx")
Dados_abelhas$Meses <- dplyr::case_when(
Dados_abelhas$Meses == 1 ~ "Jan",
Dados_abelhas$Meses == 2 ~ "Fer",
Dados_abelhas$Meses == 3 ~ "Mar",
Dados_abelhas$Meses == 4 ~ "Abr",
Dados_abelhas$Meses == 5 ~ "Mai",
Dados_abelhas$Meses == 6 ~ "Jun",
Dados_abelhas$Meses == 7 ~ "Jul",
Dados_abelhas$Meses == 8 ~ "Ago",
Dados_abelhas$Meses == 9 ~ "Set",
Dados_abelhas$Meses == 10 ~ "Out",
Dados_abelhas$Meses == 11 ~ "Nov",
TRUE ~ "Dez"
)
Dados_abelhas$Meses <- factor(Dados_abelhas$Meses,
levels = c("Jan", "Fer", "Mar", "Abr", "Mai", "Jun",
"Jul", "Ago", "Set", "Out", "Nov", "Dez" ))
mediana <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, median)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(mediana)[order(mediana)])
bar <- Dados_abelhas %>% group_by(Colônias) %>% summarise('N° potes Mel'= sum(`N° potes Mel`))
bar2 <- Dados_abelhas %>% group_by(Meses) %>% summarise('N° potes Mel'= sum(`N° potes Mel`))
bar3 <- Dados_abelhas %>% group_by(Colônias,Meses) %>% summarise("N° potes Mel"=sum(`N° potes Mel`))
bar4 <- Dados_abelhas %>% group_by(Colônias,Meses) %>% summarise("Est. Pop." = sum(`Est. Pop.`))
numerica <- Dados_abelhas[3:9]
sd <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, sd)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(sd)[order(sd)])
mediana <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, median)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(mediana)[order(mediana)])
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.1 <- glm(`N° potes Mel` ~ .,data = dadosModelo, family = poisson(link="log"))
modelo.2 <- MASS::glm.nb(`N° potes Mel` ~ `N° discos` + Colônias, data = dadosModelo)
sd <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, sd)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(sd)[order(sd)])
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.3 <- pscl::zeroinfl(`N° potes Mel` ~ .|1,
dist = "poisson", data = dadosModelo)
modelo.3.1 <- pscl::zeroinfl(`N° potes Mel` ~ .|`Comp. Canudo (cm)` + `Diâm. Canudo (cm)`+
`Tam. Discos (cm)`+ `Peso (Kg)`,
dist = "poisson", data = dadosModelo)
modelo.4 <- pscl::zeroinfl(`N° potes Mel` ~ .| 1,
dist = "negbin", data = dadosModelo)
modelo.4.2 <- pscl::zeroinfl(`N° potes Mel` ~ `Comp. Canudo (cm)`+`N° discos` + Colônias|
`Comp. Canudo (cm)`+ `N° discos` + `Tam. Discos (cm)` + `Peso (Kg)`,
dist = "negbin", data = dadosModelo)
modelo.4.3 <- pscl::zeroinfl(`N° potes Mel` ~ .| `Comp. Canudo (cm)` + `Diâm. Canudo (cm)`+
`Tam. Discos (cm)`+ `Peso (Kg)`,
dist = "geometric", data = dadosModelo,)
# ## load pscl
library(pscl)
## fit hurdle model
modelo.5 <- hurdle(`N° potes Mel` ~ . | 1,data = dadosModelo,
dist = "poisson")
modelo.6 <- hurdle(`N° potes Mel` ~ . | 1,data = dadosModelo,
dist = "negbin")
modelo.6.1 <- hurdle(`N° potes Mel` ~ `Comp. Canudo (cm)`+`N° discos` + Colônias|
`Comp. Canudo (cm)`+ `N° discos` + `Tam. Discos (cm)` + `Peso (Kg)`,
dist = "negbin")
tab1 <- data.frame("AIC" =c(AIC(modelo.1),AIC(modelo.2),AIC(modelo.3),AIC(modelo.4),AIC(modelo.5),AIC(modelo.6) ),
"logLik" = c(logLik(modelo.1)[1],logLik(modelo.2)[1],logLik(modelo.3)[1],logLik(modelo.4)[1],logLik(modelo.5)[1],logLik(modelo.6)[1]),
"df" = c(21,22,22,23,22,23),
"Dispersion"=c(disGlm(modelo.1,dadosModelo),disGlm(modelo.2,dadosModelo),disGlm(modelo.3,dadosModelo),disGlm(modelo.4,dadosModelo),
disGlm(modelo.5,dadosModelo),disGlm(modelo.6,dadosModelo)),
"dif"= abs(1-c(disGlm(modelo.1,dadosModelo),disGlm(modelo.2,dadosModelo),disGlm(modelo.3,dadosModelo),disGlm(modelo.4,dadosModelo),
disGlm(modelo.5,dadosModelo),disGlm(modelo.6,dadosModelo)))
)
row.names(tab1) <- paste0("modelo.",1:6)
res1 <- res(modelo.2)
Dados_abelhas$`N° potes Mel`
bar <- Dados_abelhas %>% group_by(Colônias) %>% summarise('N° potes Mel'= sum(`N° potes Mel`))
bar
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.1 <- glm(`N° potes Mel` ~ .,data = dadosModelo, family = poisson(link="log"))
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.1 <- glm(`N° potes Mel` ~ .,data = dadosModelo, family = poisson(link="log"))
modelo.2 <- MASS::glm.nb(`N° potes Mel` ~ `N° discos` + Colônias, data = dadosModelo)
sd <- tapply(Dados_abelhas$`N° potes Mel`, Dados_abelhas$Colônias, sd)
Dados_abelhas$Colônias <- factor(Dados_abelhas$Colônias, levels = names(sd)[order(sd)])
dadosModelo <- Dados_abelhas[-c(1,9)]
modelo.3 <- pscl::zeroinfl(`N° potes Mel` ~ .|1,
dist = "poisson", data = dadosModelo)
modelo.3.1 <- pscl::zeroinfl(`N° potes Mel` ~ .|`Comp. Canudo (cm)` + `Diâm. Canudo (cm)`+
`Tam. Discos (cm)`+ `Peso (Kg)`,
dist = "poisson", data = dadosModelo)
modelo.4 <- pscl::zeroinfl(`N° potes Mel` ~ .| 1,
dist = "negbin", data = dadosModelo)
modelo.4.2 <- pscl::zeroinfl(`N° potes Mel` ~ `Comp. Canudo (cm)`+`N° discos` + Colônias|
`Comp. Canudo (cm)`+ `N° discos` + `Tam. Discos (cm)` + `Peso (Kg)`,
dist = "negbin", data = dadosModelo)
modelo.4.3 <- pscl::zeroinfl(`N° potes Mel` ~ .| `Comp. Canudo (cm)` + `Diâm. Canudo (cm)`+
`Tam. Discos (cm)`+ `Peso (Kg)`,
dist = "geometric", data = dadosModelo,)
# ## load pscl
library(pscl)
## fit hurdle model
modelo.5 <- hurdle(`N° potes Mel` ~ . | 1,data = dadosModelo,
dist = "poisson")
modelo.6 <- hurdle(`N° potes Mel` ~ . | 1,data = dadosModelo,
dist = "negbin")
modelo.6.1 <- hurdle(`N° potes Mel` ~ `Comp. Canudo (cm)`+`N° discos` + Colônias|
`Comp. Canudo (cm)`+ `N° discos` + `Tam. Discos (cm)` + `Peso (Kg)`,
dist = "negbin")
source("00data.R", encoding = 'UTF-8')
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
options(warn=-1)
options(htmltools.dir.version = FALSE)
visdat::vis_guess(Dados_abelhas)+
theme(legend.position = "bottom", legend.background = element_rect(colour = "lightgray", size = .6), axis.text.x = element_text(hjust = 0.03))
library(ggplot2)
visdat::vis_guess(Dados_abelhas)+
theme(legend.position = "bottom", legend.background = element_rect(colour = "lightgray", size = .6), axis.text.x = element_text(hjust = 0.03))
library(highcharter)
hcboxplot(
x = Dados_abelhas$`N° potes Mel`,
var = Dados_abelhas$Colônias,
name = "Length",
color = 'darkslategrey',
outliers = TRUE
) %>%
hc_chart(type = "column") %>%
hc_title(text = " ") %>%
hc_yAxis(title = list(text = "N° potes de Mel")) %>%
hc_add_series(
data = Dados_abelhas,
type = "scatter",
hcaes(x = "Colônias", y = "Dados_abelhas$`N° potes Mel`", group = "Colônias")
) %>%
hc_plotOptions(scatter = list(
color = "red",
marker = list(
radius = 2,
symbol = "circle",
lineWidth = 1
)
))  %>%
hc_plotOptions(scatter = list(jitter = list(x = .2, y = 0)))
library(leaflet)
r <- resulmo(numerica)
source("01funcoes.R", encoding = 'UTF-8')
source("00data.R", encoding = 'UTF-8')
options(warn=-1)
options(htmltools.dir.version = FALSE)
library(leaflet)
r <- resulmo(numerica)
library(leaflet)
r <- resumo(numerica)
DT::datatable(r,class = 'cell-border stripe',
fillContainer = FALSE,
options = list(pageLength = 7,
searching=FALSE,
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': 'darkslategrey', 'color': '#fff', 'font-size': '14px', 'text-align':'center'});",
"}")))%>%
DT::formatStyle('N° potes Mel',  color = DT::styleEqual(c(111.4562,23.2656,25.931),'red'))
ggplot(Dados_abelhas, aes(`N° potes Mel`)) +
geom_histogram( aes(y =..density..),
col = 'black',fill='darkslategrey',alpha=0.6,bins= ceiling(sqrt(length(Dados_abelhas$Meses)))) +
geom_density() +
ylab(' ') +
xlab('Número de Potes de mel')+
theme_blue()
pct_format = scales::percent_format(accuracy = .1)
ccc  <- Dados_abelhas %>% dplyr::group_by(`N° potes Mel`) %>% dplyr::summarise(n=n())
ggplot(ccc,aes(`N° potes Mel`,n)) +
geom_col(fill='darkslategrey') + theme_minimal() +
ylab('Frequência absoluta') +
xlab('Número de Potes de mel')+
geom_label(aes(
label = sprintf(
'%d (%s)',
n,
pct_format(n / sum(n))
)),  fill='white', vjust=1,hjust=ifelse(ccc$n <= 14,-100,-.1))+
theme_blue()
library(highcharter)
hcboxplot(
x = Dados_abelhas$`N° potes Mel`,
var = Dados_abelhas$Colônias,
name = "Length",
color = 'darkslategrey',
outliers = TRUE
) %>%
hc_chart(type = "column") %>%
hc_title(text = " ") %>%
hc_yAxis(title = list(text = "N° potes de Mel")) %>%
hc_add_series(
data = Dados_abelhas,
type = "scatter",
hcaes(x = "Colônias", y = "Dados_abelhas$`N° potes Mel`", group = "Colônias")
) %>%
hc_plotOptions(scatter = list(
color = "red",
marker = list(
radius = 2,
symbol = "circle",
lineWidth = 1
)
))  %>%
hc_plotOptions(scatter = list(jitter = list(x = .2, y = 0)))
bar %>%
hchart(type = "column",
hcaes(x = Colônias, y = `N° potes Mel`)) %>%
hc_title(text = " ") %>%
hc_xAxis(title = list(text = "")) %>%
hc_yAxis(title = list(text = "Frequência"), stackLabels = list(enabled = TRUE)) %>%
hc_colors('darkslategrey') %>%
hc_plotOptions(series = list(stacking = "normal"))
library(highcharter)
hcboxplot(
x = Dados_abelhas$`N° potes Mel`,
var = Dados_abelhas$Meses,
name = "Length",
color = 'darkslategrey',
outliers = TRUE
) %>%
hc_chart(type = "column") %>%
hc_title(text = " ") %>%
hc_yAxis(title = list(text = "N° potes de Mel")) %>%
hc_add_series(
data = Dados_abelhas,
type = "scatter",
hcaes(x = "Meses", y = "Dados_abelhas$`N° potes Mel`", group = "Meses")
) %>%
hc_plotOptions(scatter = list(
color = "red",
marker = list(
radius = 2,
symbol = "circle",
lineWidth = 1
)
))  %>%
hc_plotOptions(scatter = list(jitter = list(x = .2, y = 0)))
bar2 %>%
hchart(type = "column",
hcaes(x = Meses, y = `N° potes Mel`)) %>%
hc_title(text = " ") %>%
hc_xAxis(title = list(text = "")) %>%
hc_yAxis(title = list(text = "Frequência"), stackLabels = list(enabled = TRUE)) %>%
hc_colors('darkslategrey') %>%
hc_plotOptions(series = list(stacking = "normal"))
library(plotly)
bar3 %>% plot_ly(x = ~Meses, y = ~`N° potes Mel`, color = ~Colônias)
